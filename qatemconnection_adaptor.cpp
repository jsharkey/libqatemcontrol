/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -i qatemconnection_adaptor.h -a :qatemconnection_adaptor.cpp com.blackmagicdesign.QAtemConnection.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "qatemconnection_adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class QAtemConnectionAdaptor
 */

QAtemConnectionAdaptor::QAtemConnectionAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

QAtemConnectionAdaptor::~QAtemConnectionAdaptor()
{
    // destructor
}

bool QAtemConnectionAdaptor::aquireMediaLock(uchar id, uchar index)
{
    // handle method call com.blackmagicdesign.QAtemConnection.aquireMediaLock
    bool out0;
    QMetaObject::invokeMethod(parent(), "aquireMediaLock", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, id), Q_ARG(uchar, index));
    return out0;
}

bool QAtemConnectionAdaptor::audioMonitorDimmed()
{
    // handle method call com.blackmagicdesign.QAtemConnection.audioMonitorDimmed
    bool out0;
    QMetaObject::invokeMethod(parent(), "audioMonitorDimmed", Q_RETURN_ARG(bool, out0));
    return out0;
}

bool QAtemConnectionAdaptor::audioMonitorEnabled()
{
    // handle method call com.blackmagicdesign.QAtemConnection.audioMonitorEnabled
    bool out0;
    QMetaObject::invokeMethod(parent(), "audioMonitorEnabled", Q_RETURN_ARG(bool, out0));
    return out0;
}

bool QAtemConnectionAdaptor::audioMonitorMuted()
{
    // handle method call com.blackmagicdesign.QAtemConnection.audioMonitorMuted
    bool out0;
    QMetaObject::invokeMethod(parent(), "audioMonitorMuted", Q_RETURN_ARG(bool, out0));
    return out0;
}

bool QAtemConnectionAdaptor::audioTallyState(ushort index)
{
    // handle method call com.blackmagicdesign.QAtemConnection.audioTallyState
    bool out0;
    QMetaObject::invokeMethod(parent(), "audioTallyState", Q_RETURN_ARG(bool, out0), Q_ARG(ushort, index));
    return out0;
}

ushort QAtemConnectionAdaptor::auxSource(uchar aux)
{
    // handle method call com.blackmagicdesign.QAtemConnection.auxSource
    ushort out0;
    QMetaObject::invokeMethod(parent(), "auxSource", Q_RETURN_ARG(ushort, out0), Q_ARG(uchar, aux));
    return out0;
}

void QAtemConnectionAdaptor::changePreviewInput(ushort index)
{
    // handle method call com.blackmagicdesign.QAtemConnection.changePreviewInput
    QMetaObject::invokeMethod(parent(), "changePreviewInput", Q_ARG(ushort, index));
}

void QAtemConnectionAdaptor::changeProgramInput(ushort index)
{
    // handle method call com.blackmagicdesign.QAtemConnection.changeProgramInput
    QMetaObject::invokeMethod(parent(), "changeProgramInput", Q_ARG(ushort, index));
}

void QAtemConnectionAdaptor::clearSettings()
{
    // handle method call com.blackmagicdesign.QAtemConnection.clearSettings
    QMetaObject::invokeMethod(parent(), "clearSettings");
}

void QAtemConnectionAdaptor::connectToSwitcher(const QString &name)
{
    // handle method call com.blackmagicdesign.QAtemConnection.connectToSwitcher
    QMetaObject::invokeMethod(parent(), "connectToSwitcher", Q_ARG(QString, name));
}

uchar QAtemConnectionAdaptor::currentTransitionStyle()
{
    // handle method call com.blackmagicdesign.QAtemConnection.currentTransitionStyle
    uchar out0;
    QMetaObject::invokeMethod(parent(), "currentTransitionStyle", Q_RETURN_ARG(uchar, out0));
    return out0;
}

bool QAtemConnectionAdaptor::debugEnabled()
{
    // handle method call com.blackmagicdesign.QAtemConnection.debugEnabled
    bool out0;
    QMetaObject::invokeMethod(parent(), "debugEnabled", Q_RETURN_ARG(bool, out0));
    return out0;
}

uchar QAtemConnectionAdaptor::dipFrames()
{
    // handle method call com.blackmagicdesign.QAtemConnection.dipFrames
    uchar out0;
    QMetaObject::invokeMethod(parent(), "dipFrames", Q_RETURN_ARG(uchar, out0));
    return out0;
}

ushort QAtemConnectionAdaptor::dipSource()
{
    // handle method call com.blackmagicdesign.QAtemConnection.dipSource
    ushort out0;
    QMetaObject::invokeMethod(parent(), "dipSource", Q_RETURN_ARG(ushort, out0));
    return out0;
}

void QAtemConnectionAdaptor::disconnectFromSwitcher()
{
    // handle method call com.blackmagicdesign.QAtemConnection.disconnectFromSwitcher
    QMetaObject::invokeMethod(parent(), "disconnectFromSwitcher");
}

void QAtemConnectionAdaptor::doAuto()
{
    // handle method call com.blackmagicdesign.QAtemConnection.doAuto
    QMetaObject::invokeMethod(parent(), "doAuto");
}

void QAtemConnectionAdaptor::doCut()
{
    // handle method call com.blackmagicdesign.QAtemConnection.doCut
    QMetaObject::invokeMethod(parent(), "doCut");
}

void QAtemConnectionAdaptor::doDownstreamKeyAuto(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.doDownstreamKeyAuto
    QMetaObject::invokeMethod(parent(), "doDownstreamKeyAuto", Q_ARG(uchar, keyer));
}

short QAtemConnectionAdaptor::downstreamKeyBottomMask(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.downstreamKeyBottomMask
    short out0;
    QMetaObject::invokeMethod(parent(), "downstreamKeyBottomMask", Q_RETURN_ARG(short, out0), Q_ARG(uchar, keyer));
    return out0;
}

ushort QAtemConnectionAdaptor::downstreamKeyClip(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.downstreamKeyClip
    ushort out0;
    QMetaObject::invokeMethod(parent(), "downstreamKeyClip", Q_RETURN_ARG(ushort, out0), Q_ARG(uchar, keyer));
    return out0;
}

bool QAtemConnectionAdaptor::downstreamKeyEnableMask(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.downstreamKeyEnableMask
    bool out0;
    QMetaObject::invokeMethod(parent(), "downstreamKeyEnableMask", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, keyer));
    return out0;
}

ushort QAtemConnectionAdaptor::downstreamKeyFillSource(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.downstreamKeyFillSource
    ushort out0;
    QMetaObject::invokeMethod(parent(), "downstreamKeyFillSource", Q_RETURN_ARG(ushort, out0), Q_ARG(uchar, keyer));
    return out0;
}

uchar QAtemConnectionAdaptor::downstreamKeyFrameCount(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.downstreamKeyFrameCount
    uchar out0;
    QMetaObject::invokeMethod(parent(), "downstreamKeyFrameCount", Q_RETURN_ARG(uchar, out0), Q_ARG(uchar, keyer));
    return out0;
}

uchar QAtemConnectionAdaptor::downstreamKeyFrames(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.downstreamKeyFrames
    uchar out0;
    QMetaObject::invokeMethod(parent(), "downstreamKeyFrames", Q_RETURN_ARG(uchar, out0), Q_ARG(uchar, keyer));
    return out0;
}

ushort QAtemConnectionAdaptor::downstreamKeyGain(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.downstreamKeyGain
    ushort out0;
    QMetaObject::invokeMethod(parent(), "downstreamKeyGain", Q_RETURN_ARG(ushort, out0), Q_ARG(uchar, keyer));
    return out0;
}

bool QAtemConnectionAdaptor::downstreamKeyInvertKey(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.downstreamKeyInvertKey
    bool out0;
    QMetaObject::invokeMethod(parent(), "downstreamKeyInvertKey", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, keyer));
    return out0;
}

ushort QAtemConnectionAdaptor::downstreamKeyKeySource(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.downstreamKeyKeySource
    ushort out0;
    QMetaObject::invokeMethod(parent(), "downstreamKeyKeySource", Q_RETURN_ARG(ushort, out0), Q_ARG(uchar, keyer));
    return out0;
}

short QAtemConnectionAdaptor::downstreamKeyLeftMask(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.downstreamKeyLeftMask
    short out0;
    QMetaObject::invokeMethod(parent(), "downstreamKeyLeftMask", Q_RETURN_ARG(short, out0), Q_ARG(uchar, keyer));
    return out0;
}

bool QAtemConnectionAdaptor::downstreamKeyOn(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.downstreamKeyOn
    bool out0;
    QMetaObject::invokeMethod(parent(), "downstreamKeyOn", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, keyer));
    return out0;
}

bool QAtemConnectionAdaptor::downstreamKeyPreMultiplied(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.downstreamKeyPreMultiplied
    bool out0;
    QMetaObject::invokeMethod(parent(), "downstreamKeyPreMultiplied", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, keyer));
    return out0;
}

short QAtemConnectionAdaptor::downstreamKeyRightMask(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.downstreamKeyRightMask
    short out0;
    QMetaObject::invokeMethod(parent(), "downstreamKeyRightMask", Q_RETURN_ARG(short, out0), Q_ARG(uchar, keyer));
    return out0;
}

bool QAtemConnectionAdaptor::downstreamKeyTie(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.downstreamKeyTie
    bool out0;
    QMetaObject::invokeMethod(parent(), "downstreamKeyTie", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, keyer));
    return out0;
}

short QAtemConnectionAdaptor::downstreamKeyTopMask(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.downstreamKeyTopMask
    short out0;
    QMetaObject::invokeMethod(parent(), "downstreamKeyTopMask", Q_RETURN_ARG(short, out0), Q_ARG(uchar, keyer));
    return out0;
}

uchar QAtemConnectionAdaptor::dveEffect()
{
    // handle method call com.blackmagicdesign.QAtemConnection.dveEffect
    uchar out0;
    QMetaObject::invokeMethod(parent(), "dveEffect", Q_RETURN_ARG(uchar, out0));
    return out0;
}

ushort QAtemConnectionAdaptor::dveFillSource()
{
    // handle method call com.blackmagicdesign.QAtemConnection.dveFillSource
    ushort out0;
    QMetaObject::invokeMethod(parent(), "dveFillSource", Q_RETURN_ARG(ushort, out0));
    return out0;
}

bool QAtemConnectionAdaptor::dveFlipFlopDirection()
{
    // handle method call com.blackmagicdesign.QAtemConnection.dveFlipFlopDirection
    bool out0;
    QMetaObject::invokeMethod(parent(), "dveFlipFlopDirection", Q_RETURN_ARG(bool, out0));
    return out0;
}

bool QAtemConnectionAdaptor::dveInvertKeyEnabled()
{
    // handle method call com.blackmagicdesign.QAtemConnection.dveInvertKeyEnabled
    bool out0;
    QMetaObject::invokeMethod(parent(), "dveInvertKeyEnabled", Q_RETURN_ARG(bool, out0));
    return out0;
}

bool QAtemConnectionAdaptor::dveKeyEnabled()
{
    // handle method call com.blackmagicdesign.QAtemConnection.dveKeyEnabled
    bool out0;
    QMetaObject::invokeMethod(parent(), "dveKeyEnabled", Q_RETURN_ARG(bool, out0));
    return out0;
}

ushort QAtemConnectionAdaptor::dveKeySource()
{
    // handle method call com.blackmagicdesign.QAtemConnection.dveKeySource
    ushort out0;
    QMetaObject::invokeMethod(parent(), "dveKeySource", Q_RETURN_ARG(ushort, out0));
    return out0;
}

bool QAtemConnectionAdaptor::dvePreMultipliedKeyEnabled()
{
    // handle method call com.blackmagicdesign.QAtemConnection.dvePreMultipliedKeyEnabled
    bool out0;
    QMetaObject::invokeMethod(parent(), "dvePreMultipliedKeyEnabled", Q_RETURN_ARG(bool, out0));
    return out0;
}

ushort QAtemConnectionAdaptor::dveRate()
{
    // handle method call com.blackmagicdesign.QAtemConnection.dveRate
    ushort out0;
    QMetaObject::invokeMethod(parent(), "dveRate", Q_RETURN_ARG(ushort, out0));
    return out0;
}

bool QAtemConnectionAdaptor::dveReverseDirection()
{
    // handle method call com.blackmagicdesign.QAtemConnection.dveReverseDirection
    bool out0;
    QMetaObject::invokeMethod(parent(), "dveReverseDirection", Q_RETURN_ARG(bool, out0));
    return out0;
}

bool QAtemConnectionAdaptor::fadeToBlackEnabled()
{
    // handle method call com.blackmagicdesign.QAtemConnection.fadeToBlackEnabled
    bool out0;
    QMetaObject::invokeMethod(parent(), "fadeToBlackEnabled", Q_RETURN_ARG(bool, out0));
    return out0;
}

bool QAtemConnectionAdaptor::fadeToBlackFading()
{
    // handle method call com.blackmagicdesign.QAtemConnection.fadeToBlackFading
    bool out0;
    QMetaObject::invokeMethod(parent(), "fadeToBlackFading", Q_RETURN_ARG(bool, out0));
    return out0;
}

uchar QAtemConnectionAdaptor::fadeToBlackFrameCount()
{
    // handle method call com.blackmagicdesign.QAtemConnection.fadeToBlackFrameCount
    uchar out0;
    QMetaObject::invokeMethod(parent(), "fadeToBlackFrameCount", Q_RETURN_ARG(uchar, out0));
    return out0;
}

uchar QAtemConnectionAdaptor::fadeToBlackFrames()
{
    // handle method call com.blackmagicdesign.QAtemConnection.fadeToBlackFrames
    uchar out0;
    QMetaObject::invokeMethod(parent(), "fadeToBlackFrames", Q_RETURN_ARG(uchar, out0));
    return out0;
}

uchar QAtemConnectionAdaptor::framesPerSecond()
{
    // handle method call com.blackmagicdesign.QAtemConnection.framesPerSecond
    uchar out0;
    QMetaObject::invokeMethod(parent(), "framesPerSecond", Q_RETURN_ARG(uchar, out0));
    return out0;
}

uchar QAtemConnectionAdaptor::keyersOnCurrentTransition()
{
    // handle method call com.blackmagicdesign.QAtemConnection.keyersOnCurrentTransition
    uchar out0;
    QMetaObject::invokeMethod(parent(), "keyersOnCurrentTransition", Q_RETURN_ARG(uchar, out0));
    return out0;
}

uchar QAtemConnectionAdaptor::keyersOnNextTransition()
{
    // handle method call com.blackmagicdesign.QAtemConnection.keyersOnNextTransition
    uchar out0;
    QMetaObject::invokeMethod(parent(), "keyersOnNextTransition", Q_RETURN_ARG(uchar, out0));
    return out0;
}

ushort QAtemConnectionAdaptor::majorVersion()
{
    // handle method call com.blackmagicdesign.QAtemConnection.majorVersion
    ushort out0;
    QMetaObject::invokeMethod(parent(), "majorVersion", Q_RETURN_ARG(ushort, out0));
    return out0;
}

bool QAtemConnectionAdaptor::mediaLockState(uchar id)
{
    // handle method call com.blackmagicdesign.QAtemConnection.mediaLockState
    bool out0;
    QMetaObject::invokeMethod(parent(), "mediaLockState", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, id));
    return out0;
}

void QAtemConnectionAdaptor::mediaPlayerGoFrameBackward(uchar player)
{
    // handle method call com.blackmagicdesign.QAtemConnection.mediaPlayerGoFrameBackward
    QMetaObject::invokeMethod(parent(), "mediaPlayerGoFrameBackward", Q_ARG(uchar, player));
}

void QAtemConnectionAdaptor::mediaPlayerGoFrameForward(uchar player)
{
    // handle method call com.blackmagicdesign.QAtemConnection.mediaPlayerGoFrameForward
    QMetaObject::invokeMethod(parent(), "mediaPlayerGoFrameForward", Q_ARG(uchar, player));
}

void QAtemConnectionAdaptor::mediaPlayerGoToBeginning(uchar player)
{
    // handle method call com.blackmagicdesign.QAtemConnection.mediaPlayerGoToBeginning
    QMetaObject::invokeMethod(parent(), "mediaPlayerGoToBeginning", Q_ARG(uchar, player));
}

uchar QAtemConnectionAdaptor::mediaPlayerSelectedClip(uchar player)
{
    // handle method call com.blackmagicdesign.QAtemConnection.mediaPlayerSelectedClip
    uchar out0;
    QMetaObject::invokeMethod(parent(), "mediaPlayerSelectedClip", Q_RETURN_ARG(uchar, out0), Q_ARG(uchar, player));
    return out0;
}

uchar QAtemConnectionAdaptor::mediaPlayerSelectedStill(uchar player)
{
    // handle method call com.blackmagicdesign.QAtemConnection.mediaPlayerSelectedStill
    uchar out0;
    QMetaObject::invokeMethod(parent(), "mediaPlayerSelectedStill", Q_RETURN_ARG(uchar, out0), Q_ARG(uchar, player));
    return out0;
}

uchar QAtemConnectionAdaptor::mediaPlayerType(uchar player)
{
    // handle method call com.blackmagicdesign.QAtemConnection.mediaPlayerType
    uchar out0;
    QMetaObject::invokeMethod(parent(), "mediaPlayerType", Q_RETURN_ARG(uchar, out0), Q_ARG(uchar, player));
    return out0;
}

uchar QAtemConnectionAdaptor::mediaPoolClip1Size()
{
    // handle method call com.blackmagicdesign.QAtemConnection.mediaPoolClip1Size
    uchar out0;
    QMetaObject::invokeMethod(parent(), "mediaPoolClip1Size", Q_RETURN_ARG(uchar, out0));
    return out0;
}

uchar QAtemConnectionAdaptor::mediaPoolClip2Size()
{
    // handle method call com.blackmagicdesign.QAtemConnection.mediaPoolClip2Size
    uchar out0;
    QMetaObject::invokeMethod(parent(), "mediaPoolClip2Size", Q_RETURN_ARG(uchar, out0));
    return out0;
}

ushort QAtemConnectionAdaptor::minorVersion()
{
    // handle method call com.blackmagicdesign.QAtemConnection.minorVersion
    ushort out0;
    QMetaObject::invokeMethod(parent(), "minorVersion", Q_RETURN_ARG(ushort, out0));
    return out0;
}

uchar QAtemConnectionAdaptor::mixFrames()
{
    // handle method call com.blackmagicdesign.QAtemConnection.mixFrames
    uchar out0;
    QMetaObject::invokeMethod(parent(), "mixFrames", Q_RETURN_ARG(uchar, out0));
    return out0;
}

uchar QAtemConnectionAdaptor::multiViewInput(uchar multiViewOutput)
{
    // handle method call com.blackmagicdesign.QAtemConnection.multiViewInput
    uchar out0;
    QMetaObject::invokeMethod(parent(), "multiViewInput", Q_RETURN_ARG(uchar, out0), Q_ARG(uchar, multiViewOutput));
    return out0;
}

uchar QAtemConnectionAdaptor::multiViewLayout()
{
    // handle method call com.blackmagicdesign.QAtemConnection.multiViewLayout
    uchar out0;
    QMetaObject::invokeMethod(parent(), "multiViewLayout", Q_RETURN_ARG(uchar, out0));
    return out0;
}

uchar QAtemConnectionAdaptor::nextTransitionStyle()
{
    // handle method call com.blackmagicdesign.QAtemConnection.nextTransitionStyle
    uchar out0;
    QMetaObject::invokeMethod(parent(), "nextTransitionStyle", Q_RETURN_ARG(uchar, out0));
    return out0;
}

ushort QAtemConnectionAdaptor::previewInput()
{
    // handle method call com.blackmagicdesign.QAtemConnection.previewInput
    ushort out0;
    QMetaObject::invokeMethod(parent(), "previewInput", Q_RETURN_ARG(ushort, out0));
    return out0;
}

QString QAtemConnectionAdaptor::productInformation()
{
    // handle method call com.blackmagicdesign.QAtemConnection.productInformation
    QString out0;
    QMetaObject::invokeMethod(parent(), "productInformation", Q_RETURN_ARG(QString, out0));
    return out0;
}

ushort QAtemConnectionAdaptor::programInput()
{
    // handle method call com.blackmagicdesign.QAtemConnection.programInput
    ushort out0;
    QMetaObject::invokeMethod(parent(), "programInput", Q_RETURN_ARG(ushort, out0));
    return out0;
}

int QAtemConnectionAdaptor::remainingTransferDataSize()
{
    // handle method call com.blackmagicdesign.QAtemConnection.remainingTransferDataSize
    int out0;
    QMetaObject::invokeMethod(parent(), "remainingTransferDataSize", Q_RETURN_ARG(int, out0));
    return out0;
}

void QAtemConnectionAdaptor::runUpstreamKeyTo(uchar keyer, uchar position, uchar direction)
{
    // handle method call com.blackmagicdesign.QAtemConnection.runUpstreamKeyTo
    QMetaObject::invokeMethod(parent(), "runUpstreamKeyTo", Q_ARG(uchar, keyer), Q_ARG(uchar, position), Q_ARG(uchar, direction));
}

void QAtemConnectionAdaptor::saveSettings()
{
    // handle method call com.blackmagicdesign.QAtemConnection.saveSettings
    QMetaObject::invokeMethod(parent(), "saveSettings");
}

ushort QAtemConnectionAdaptor::sendDataToSwitcher(uchar storeId, uchar index, const QByteArray &name, const QByteArray &data)
{
    // handle method call com.blackmagicdesign.QAtemConnection.sendDataToSwitcher
    ushort out0;
    QMetaObject::invokeMethod(parent(), "sendDataToSwitcher", Q_RETURN_ARG(ushort, out0), Q_ARG(uchar, storeId), Q_ARG(uchar, index), Q_ARG(QByteArray, name), Q_ARG(QByteArray, data));
    return out0;
}

void QAtemConnectionAdaptor::setAudioInputState(ushort index, uchar state)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setAudioInputState
    QMetaObject::invokeMethod(parent(), "setAudioInputState", Q_ARG(ushort, index), Q_ARG(uchar, state));
}

void QAtemConnectionAdaptor::setAudioLevelsEnabled(bool enabled)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setAudioLevelsEnabled
    QMetaObject::invokeMethod(parent(), "setAudioLevelsEnabled", Q_ARG(bool, enabled));
}

void QAtemConnectionAdaptor::setAudioMonitorDimmed(bool dimmed)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setAudioMonitorDimmed
    QMetaObject::invokeMethod(parent(), "setAudioMonitorDimmed", Q_ARG(bool, dimmed));
}

void QAtemConnectionAdaptor::setAudioMonitorEnabled(bool enabled)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setAudioMonitorEnabled
    QMetaObject::invokeMethod(parent(), "setAudioMonitorEnabled", Q_ARG(bool, enabled));
}

void QAtemConnectionAdaptor::setAudioMonitorMuted(bool muted)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setAudioMonitorMuted
    QMetaObject::invokeMethod(parent(), "setAudioMonitorMuted", Q_ARG(bool, muted));
}

void QAtemConnectionAdaptor::setAuxSource(uchar aux, ushort source)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setAuxSource
    QMetaObject::invokeMethod(parent(), "setAuxSource", Q_ARG(uchar, aux), Q_ARG(ushort, source));
}

void QAtemConnectionAdaptor::setBackgroundOnNextTransition(bool state)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setBackgroundOnNextTransition
    QMetaObject::invokeMethod(parent(), "setBackgroundOnNextTransition", Q_ARG(bool, state));
}

void QAtemConnectionAdaptor::setDVEEffect(uchar effect)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDVEEffect
    QMetaObject::invokeMethod(parent(), "setDVEEffect", Q_ARG(uchar, effect));
}

void QAtemConnectionAdaptor::setDVEFillSource(ushort source)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDVEFillSource
    QMetaObject::invokeMethod(parent(), "setDVEFillSource", Q_ARG(ushort, source));
}

void QAtemConnectionAdaptor::setDVEFlipFlopDirection(bool flipFlop)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDVEFlipFlopDirection
    QMetaObject::invokeMethod(parent(), "setDVEFlipFlopDirection", Q_ARG(bool, flipFlop));
}

void QAtemConnectionAdaptor::setDVEInvertKeyEnabled(bool enabled)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDVEInvertKeyEnabled
    QMetaObject::invokeMethod(parent(), "setDVEInvertKeyEnabled", Q_ARG(bool, enabled));
}

void QAtemConnectionAdaptor::setDVEKeyEnabled(bool enabled)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDVEKeyEnabled
    QMetaObject::invokeMethod(parent(), "setDVEKeyEnabled", Q_ARG(bool, enabled));
}

void QAtemConnectionAdaptor::setDVEKeySource(ushort source)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDVEKeySource
    QMetaObject::invokeMethod(parent(), "setDVEKeySource", Q_ARG(ushort, source));
}

void QAtemConnectionAdaptor::setDVEPreMultipliedKeyEnabled(bool enabled)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDVEPreMultipliedKeyEnabled
    QMetaObject::invokeMethod(parent(), "setDVEPreMultipliedKeyEnabled", Q_ARG(bool, enabled));
}

void QAtemConnectionAdaptor::setDVERate(ushort frames)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDVERate
    QMetaObject::invokeMethod(parent(), "setDVERate", Q_ARG(ushort, frames));
}

void QAtemConnectionAdaptor::setDVEReverseDirection(bool reverse)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDVEReverseDirection
    QMetaObject::invokeMethod(parent(), "setDVEReverseDirection", Q_ARG(bool, reverse));
}

void QAtemConnectionAdaptor::setDebugEnabled(bool enabled)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDebugEnabled
    QMetaObject::invokeMethod(parent(), "setDebugEnabled", Q_ARG(bool, enabled));
}

void QAtemConnectionAdaptor::setDipFrames(uchar frames)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDipFrames
    QMetaObject::invokeMethod(parent(), "setDipFrames", Q_ARG(uchar, frames));
}

void QAtemConnectionAdaptor::setDipSource(ushort source)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDipSource
    QMetaObject::invokeMethod(parent(), "setDipSource", Q_ARG(ushort, source));
}

void QAtemConnectionAdaptor::setDownstreamKeyEnableMask(uchar keyer, bool enable)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDownstreamKeyEnableMask
    QMetaObject::invokeMethod(parent(), "setDownstreamKeyEnableMask", Q_ARG(uchar, keyer), Q_ARG(bool, enable));
}

void QAtemConnectionAdaptor::setDownstreamKeyFillSource(uchar keyer, ushort source)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDownstreamKeyFillSource
    QMetaObject::invokeMethod(parent(), "setDownstreamKeyFillSource", Q_ARG(uchar, keyer), Q_ARG(ushort, source));
}

void QAtemConnectionAdaptor::setDownstreamKeyFrameRate(uchar keyer, uchar frames)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDownstreamKeyFrameRate
    QMetaObject::invokeMethod(parent(), "setDownstreamKeyFrameRate", Q_ARG(uchar, keyer), Q_ARG(uchar, frames));
}

void QAtemConnectionAdaptor::setDownstreamKeyInvertKey(uchar keyer, bool invert)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDownstreamKeyInvertKey
    QMetaObject::invokeMethod(parent(), "setDownstreamKeyInvertKey", Q_ARG(uchar, keyer), Q_ARG(bool, invert));
}

void QAtemConnectionAdaptor::setDownstreamKeyKeySource(uchar keyer, ushort source)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDownstreamKeyKeySource
    QMetaObject::invokeMethod(parent(), "setDownstreamKeyKeySource", Q_ARG(uchar, keyer), Q_ARG(ushort, source));
}

void QAtemConnectionAdaptor::setDownstreamKeyOn(uchar keyer, bool state)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDownstreamKeyOn
    QMetaObject::invokeMethod(parent(), "setDownstreamKeyOn", Q_ARG(uchar, keyer), Q_ARG(bool, state));
}

void QAtemConnectionAdaptor::setDownstreamKeyPreMultiplied(uchar keyer, bool preMultiplied)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDownstreamKeyPreMultiplied
    QMetaObject::invokeMethod(parent(), "setDownstreamKeyPreMultiplied", Q_ARG(uchar, keyer), Q_ARG(bool, preMultiplied));
}

void QAtemConnectionAdaptor::setDownstreamKeyTie(uchar keyer, bool state)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setDownstreamKeyTie
    QMetaObject::invokeMethod(parent(), "setDownstreamKeyTie", Q_ARG(uchar, keyer), Q_ARG(bool, state));
}

void QAtemConnectionAdaptor::setFadeToBlackFrameRate(uchar frames)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setFadeToBlackFrameRate
    QMetaObject::invokeMethod(parent(), "setFadeToBlackFrameRate", Q_ARG(uchar, frames));
}

void QAtemConnectionAdaptor::setInputLongName(ushort input, const QString &name)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setInputLongName
    QMetaObject::invokeMethod(parent(), "setInputLongName", Q_ARG(ushort, input), Q_ARG(QString, name));
}

void QAtemConnectionAdaptor::setInputShortName(ushort input, const QString &name)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setInputShortName
    QMetaObject::invokeMethod(parent(), "setInputShortName", Q_ARG(ushort, input), Q_ARG(QString, name));
}

void QAtemConnectionAdaptor::setInputType(ushort input, uchar type)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setInputType
    QMetaObject::invokeMethod(parent(), "setInputType", Q_ARG(ushort, input), Q_ARG(uchar, type));
}

void QAtemConnectionAdaptor::setMediaPlayerLoop(uchar player, bool loop)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setMediaPlayerLoop
    QMetaObject::invokeMethod(parent(), "setMediaPlayerLoop", Q_ARG(uchar, player), Q_ARG(bool, loop));
}

void QAtemConnectionAdaptor::setMediaPlayerPlay(uchar player, bool play)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setMediaPlayerPlay
    QMetaObject::invokeMethod(parent(), "setMediaPlayerPlay", Q_ARG(uchar, player), Q_ARG(bool, play));
}

void QAtemConnectionAdaptor::setMediaPlayerSource(uchar player, bool clip, uchar source)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setMediaPlayerSource
    QMetaObject::invokeMethod(parent(), "setMediaPlayerSource", Q_ARG(uchar, player), Q_ARG(bool, clip), Q_ARG(uchar, source));
}

void QAtemConnectionAdaptor::setMediaPoolClipSplit(uchar size)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setMediaPoolClipSplit
    QMetaObject::invokeMethod(parent(), "setMediaPoolClipSplit", Q_ARG(uchar, size));
}

void QAtemConnectionAdaptor::setMixFrames(uchar frames)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setMixFrames
    QMetaObject::invokeMethod(parent(), "setMixFrames", Q_ARG(uchar, frames));
}

void QAtemConnectionAdaptor::setMultiViewLayout(uchar layout)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setMultiViewLayout
    QMetaObject::invokeMethod(parent(), "setMultiViewLayout", Q_ARG(uchar, layout));
}

void QAtemConnectionAdaptor::setStingerClipDuration(ushort frames)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setStingerClipDuration
    QMetaObject::invokeMethod(parent(), "setStingerClipDuration", Q_ARG(ushort, frames));
}

void QAtemConnectionAdaptor::setStingerInvertKeyEnabled(bool enabled)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setStingerInvertKeyEnabled
    QMetaObject::invokeMethod(parent(), "setStingerInvertKeyEnabled", Q_ARG(bool, enabled));
}

void QAtemConnectionAdaptor::setStingerMixRate(ushort frames)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setStingerMixRate
    QMetaObject::invokeMethod(parent(), "setStingerMixRate", Q_ARG(ushort, frames));
}

void QAtemConnectionAdaptor::setStingerPreMultipliedKeyEnabled(bool enabled)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setStingerPreMultipliedKeyEnabled
    QMetaObject::invokeMethod(parent(), "setStingerPreMultipliedKeyEnabled", Q_ARG(bool, enabled));
}

void QAtemConnectionAdaptor::setStingerPreRoll(ushort frames)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setStingerPreRoll
    QMetaObject::invokeMethod(parent(), "setStingerPreRoll", Q_ARG(ushort, frames));
}

void QAtemConnectionAdaptor::setStingerSource(uchar source)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setStingerSource
    QMetaObject::invokeMethod(parent(), "setStingerSource", Q_ARG(uchar, source));
}

void QAtemConnectionAdaptor::setStingerTriggerPoint(ushort frames)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setStingerTriggerPoint
    QMetaObject::invokeMethod(parent(), "setStingerTriggerPoint", Q_ARG(ushort, frames));
}

void QAtemConnectionAdaptor::setTransitionPosition(ushort position)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setTransitionPosition
    QMetaObject::invokeMethod(parent(), "setTransitionPosition", Q_ARG(ushort, position));
}

void QAtemConnectionAdaptor::setTransitionPreview(bool state)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setTransitionPreview
    QMetaObject::invokeMethod(parent(), "setTransitionPreview", Q_ARG(bool, state));
}

void QAtemConnectionAdaptor::setTransitionType(uchar type)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setTransitionType
    QMetaObject::invokeMethod(parent(), "setTransitionType", Q_ARG(uchar, type));
}

void QAtemConnectionAdaptor::setUpstreamKeyChromaNarrowRange(uchar keyer, bool narrowRange)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyChromaNarrowRange
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyChromaNarrowRange", Q_ARG(uchar, keyer), Q_ARG(bool, narrowRange));
}

void QAtemConnectionAdaptor::setUpstreamKeyDVEBorderBevelSoften(uchar keyer, uchar soften)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyDVEBorderBevelSoften
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyDVEBorderBevelSoften", Q_ARG(uchar, keyer), Q_ARG(uchar, soften));
}

void QAtemConnectionAdaptor::setUpstreamKeyDVEBorderEnabled(uchar keyer, bool enabled)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyDVEBorderEnabled
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyDVEBorderEnabled", Q_ARG(uchar, keyer), Q_ARG(bool, enabled));
}

void QAtemConnectionAdaptor::setUpstreamKeyDVEBorderOpacity(uchar keyer, uchar opacity)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyDVEBorderOpacity
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyDVEBorderOpacity", Q_ARG(uchar, keyer), Q_ARG(uchar, opacity));
}

void QAtemConnectionAdaptor::setUpstreamKeyDVEBorderSoften(uchar keyer, uchar outside, uchar inside)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyDVEBorderSoften
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyDVEBorderSoften", Q_ARG(uchar, keyer), Q_ARG(uchar, outside), Q_ARG(uchar, inside));
}

void QAtemConnectionAdaptor::setUpstreamKeyDVEBorderStyle(uchar keyer, uchar style)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyDVEBorderStyle
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyDVEBorderStyle", Q_ARG(uchar, keyer), Q_ARG(uchar, style));
}

void QAtemConnectionAdaptor::setUpstreamKeyDVEDropShadowEnabled(uchar keyer, bool enabled)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyDVEDropShadowEnabled
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyDVEDropShadowEnabled", Q_ARG(uchar, keyer), Q_ARG(bool, enabled));
}

void QAtemConnectionAdaptor::setUpstreamKeyDVEKeyFrame(uchar keyer, uchar keyFrame)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyDVEKeyFrame
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyDVEKeyFrame", Q_ARG(uchar, keyer), Q_ARG(uchar, keyFrame));
}

void QAtemConnectionAdaptor::setUpstreamKeyDVERate(uchar keyer, uchar rate)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyDVERate
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyDVERate", Q_ARG(uchar, keyer), Q_ARG(uchar, rate));
}

void QAtemConnectionAdaptor::setUpstreamKeyEnableMask(uchar keyer, bool enable)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyEnableMask
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyEnableMask", Q_ARG(uchar, keyer), Q_ARG(bool, enable));
}

void QAtemConnectionAdaptor::setUpstreamKeyFillSource(uchar keyer, ushort source)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyFillSource
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyFillSource", Q_ARG(uchar, keyer), Q_ARG(ushort, source));
}

void QAtemConnectionAdaptor::setUpstreamKeyFlyEnabled(uchar keyer, bool enable)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyFlyEnabled
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyFlyEnabled", Q_ARG(uchar, keyer), Q_ARG(bool, enable));
}

void QAtemConnectionAdaptor::setUpstreamKeyKeySource(uchar keyer, ushort source)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyKeySource
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyKeySource", Q_ARG(uchar, keyer), Q_ARG(ushort, source));
}

void QAtemConnectionAdaptor::setUpstreamKeyLumaInvertKey(uchar keyer, bool invert)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyLumaInvertKey
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyLumaInvertKey", Q_ARG(uchar, keyer), Q_ARG(bool, invert));
}

void QAtemConnectionAdaptor::setUpstreamKeyLumaPreMultipliedKey(uchar keyer, bool preMultiplied)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyLumaPreMultipliedKey
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyLumaPreMultipliedKey", Q_ARG(uchar, keyer), Q_ARG(bool, preMultiplied));
}

void QAtemConnectionAdaptor::setUpstreamKeyOn(uchar keyer, bool state)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyOn
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyOn", Q_ARG(uchar, keyer), Q_ARG(bool, state));
}

void QAtemConnectionAdaptor::setUpstreamKeyOnNextTransition(uchar keyer, bool state)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyOnNextTransition
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyOnNextTransition", Q_ARG(uchar, keyer), Q_ARG(bool, state));
}

void QAtemConnectionAdaptor::setUpstreamKeyPatternInvertPattern(uchar keyer, bool invert)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyPatternInvertPattern
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyPatternInvertPattern", Q_ARG(uchar, keyer), Q_ARG(bool, invert));
}

void QAtemConnectionAdaptor::setUpstreamKeyPatternPattern(uchar keyer, uchar pattern)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyPatternPattern
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyPatternPattern", Q_ARG(uchar, keyer), Q_ARG(uchar, pattern));
}

void QAtemConnectionAdaptor::setUpstreamKeyType(uchar keyer, uchar type)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setUpstreamKeyType
    QMetaObject::invokeMethod(parent(), "setUpstreamKeyType", Q_ARG(uchar, keyer), Q_ARG(uchar, type));
}

void QAtemConnectionAdaptor::setVideoDownConvertType(uchar type)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setVideoDownConvertType
    QMetaObject::invokeMethod(parent(), "setVideoDownConvertType", Q_ARG(uchar, type));
}

void QAtemConnectionAdaptor::setVideoFormat(uchar format)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setVideoFormat
    QMetaObject::invokeMethod(parent(), "setVideoFormat", Q_ARG(uchar, format));
}

void QAtemConnectionAdaptor::setWipeBorderSoftness(ushort softness)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setWipeBorderSoftness
    QMetaObject::invokeMethod(parent(), "setWipeBorderSoftness", Q_ARG(ushort, softness));
}

void QAtemConnectionAdaptor::setWipeBorderSource(ushort source)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setWipeBorderSource
    QMetaObject::invokeMethod(parent(), "setWipeBorderSource", Q_ARG(ushort, source));
}

void QAtemConnectionAdaptor::setWipeBorderWidth(ushort width)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setWipeBorderWidth
    QMetaObject::invokeMethod(parent(), "setWipeBorderWidth", Q_ARG(ushort, width));
}

void QAtemConnectionAdaptor::setWipeFlipFlop(bool flipFlop)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setWipeFlipFlop
    QMetaObject::invokeMethod(parent(), "setWipeFlipFlop", Q_ARG(bool, flipFlop));
}

void QAtemConnectionAdaptor::setWipeFrames(uchar frames)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setWipeFrames
    QMetaObject::invokeMethod(parent(), "setWipeFrames", Q_ARG(uchar, frames));
}

void QAtemConnectionAdaptor::setWipeReverseDirection(bool reverse)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setWipeReverseDirection
    QMetaObject::invokeMethod(parent(), "setWipeReverseDirection", Q_ARG(bool, reverse));
}

void QAtemConnectionAdaptor::setWipeSymmetry(ushort value)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setWipeSymmetry
    QMetaObject::invokeMethod(parent(), "setWipeSymmetry", Q_ARG(ushort, value));
}

void QAtemConnectionAdaptor::setWipeType(uchar type)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setWipeType
    QMetaObject::invokeMethod(parent(), "setWipeType", Q_ARG(uchar, type));
}

void QAtemConnectionAdaptor::setWipeXPosition(ushort value)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setWipeXPosition
    QMetaObject::invokeMethod(parent(), "setWipeXPosition", Q_ARG(ushort, value));
}

void QAtemConnectionAdaptor::setWipeYPosition(ushort value)
{
    // handle method call com.blackmagicdesign.QAtemConnection.setWipeYPosition
    QMetaObject::invokeMethod(parent(), "setWipeYPosition", Q_ARG(ushort, value));
}

void QAtemConnectionAdaptor::signalTransitionPositionChangeDone()
{
    // handle method call com.blackmagicdesign.QAtemConnection.signalTransitionPositionChangeDone
    QMetaObject::invokeMethod(parent(), "signalTransitionPositionChangeDone");
}

ushort QAtemConnectionAdaptor::stingerClipDuration()
{
    // handle method call com.blackmagicdesign.QAtemConnection.stingerClipDuration
    ushort out0;
    QMetaObject::invokeMethod(parent(), "stingerClipDuration", Q_RETURN_ARG(ushort, out0));
    return out0;
}

bool QAtemConnectionAdaptor::stingerInvertKeyEnabled()
{
    // handle method call com.blackmagicdesign.QAtemConnection.stingerInvertKeyEnabled
    bool out0;
    QMetaObject::invokeMethod(parent(), "stingerInvertKeyEnabled", Q_RETURN_ARG(bool, out0));
    return out0;
}

ushort QAtemConnectionAdaptor::stingerMixRate()
{
    // handle method call com.blackmagicdesign.QAtemConnection.stingerMixRate
    ushort out0;
    QMetaObject::invokeMethod(parent(), "stingerMixRate", Q_RETURN_ARG(ushort, out0));
    return out0;
}

bool QAtemConnectionAdaptor::stingerPreMultipliedKeyEnabled()
{
    // handle method call com.blackmagicdesign.QAtemConnection.stingerPreMultipliedKeyEnabled
    bool out0;
    QMetaObject::invokeMethod(parent(), "stingerPreMultipliedKeyEnabled", Q_RETURN_ARG(bool, out0));
    return out0;
}

ushort QAtemConnectionAdaptor::stingerPreRoll()
{
    // handle method call com.blackmagicdesign.QAtemConnection.stingerPreRoll
    ushort out0;
    QMetaObject::invokeMethod(parent(), "stingerPreRoll", Q_RETURN_ARG(ushort, out0));
    return out0;
}

uchar QAtemConnectionAdaptor::stingerSource()
{
    // handle method call com.blackmagicdesign.QAtemConnection.stingerSource
    uchar out0;
    QMetaObject::invokeMethod(parent(), "stingerSource", Q_RETURN_ARG(uchar, out0));
    return out0;
}

ushort QAtemConnectionAdaptor::stingerTriggerPoint()
{
    // handle method call com.blackmagicdesign.QAtemConnection.stingerTriggerPoint
    ushort out0;
    QMetaObject::invokeMethod(parent(), "stingerTriggerPoint", Q_RETURN_ARG(ushort, out0));
    return out0;
}

uchar QAtemConnectionAdaptor::tallyState(uchar id)
{
    // handle method call com.blackmagicdesign.QAtemConnection.tallyState
    uchar out0;
    QMetaObject::invokeMethod(parent(), "tallyState", Q_RETURN_ARG(uchar, out0), Q_ARG(uchar, id));
    return out0;
}

uchar QAtemConnectionAdaptor::tallyStateCount()
{
    // handle method call com.blackmagicdesign.QAtemConnection.tallyStateCount
    uchar out0;
    QMetaObject::invokeMethod(parent(), "tallyStateCount", Q_RETURN_ARG(uchar, out0));
    return out0;
}

void QAtemConnectionAdaptor::toggleFadeToBlack()
{
    // handle method call com.blackmagicdesign.QAtemConnection.toggleFadeToBlack
    QMetaObject::invokeMethod(parent(), "toggleFadeToBlack");
}

bool QAtemConnectionAdaptor::transferActive()
{
    // handle method call com.blackmagicdesign.QAtemConnection.transferActive
    bool out0;
    QMetaObject::invokeMethod(parent(), "transferActive", Q_RETURN_ARG(bool, out0));
    return out0;
}

ushort QAtemConnectionAdaptor::transferId()
{
    // handle method call com.blackmagicdesign.QAtemConnection.transferId
    ushort out0;
    QMetaObject::invokeMethod(parent(), "transferId", Q_RETURN_ARG(ushort, out0));
    return out0;
}

uchar QAtemConnectionAdaptor::transitionFrameCount()
{
    // handle method call com.blackmagicdesign.QAtemConnection.transitionFrameCount
    uchar out0;
    QMetaObject::invokeMethod(parent(), "transitionFrameCount", Q_RETURN_ARG(uchar, out0));
    return out0;
}

ushort QAtemConnectionAdaptor::transitionPosition()
{
    // handle method call com.blackmagicdesign.QAtemConnection.transitionPosition
    ushort out0;
    QMetaObject::invokeMethod(parent(), "transitionPosition", Q_RETURN_ARG(ushort, out0));
    return out0;
}

bool QAtemConnectionAdaptor::transitionPreviewEnabled()
{
    // handle method call com.blackmagicdesign.QAtemConnection.transitionPreviewEnabled
    bool out0;
    QMetaObject::invokeMethod(parent(), "transitionPreviewEnabled", Q_RETURN_ARG(bool, out0));
    return out0;
}

void QAtemConnectionAdaptor::unlockMediaLock(uchar id)
{
    // handle method call com.blackmagicdesign.QAtemConnection.unlockMediaLock
    QMetaObject::invokeMethod(parent(), "unlockMediaLock", Q_ARG(uchar, id));
}

bool QAtemConnectionAdaptor::upstreamKeyChromaNarrowRange(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyChromaNarrowRange
    bool out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyChromaNarrowRange", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, keyer));
    return out0;
}

uchar QAtemConnectionAdaptor::upstreamKeyDVEBorderBevelSofter(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyDVEBorderBevelSofter
    uchar out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyDVEBorderBevelSofter", Q_RETURN_ARG(uchar, out0), Q_ARG(uchar, keyer));
    return out0;
}

bool QAtemConnectionAdaptor::upstreamKeyDVEBorderEnabled(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyDVEBorderEnabled
    bool out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyDVEBorderEnabled", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, keyer));
    return out0;
}

uchar QAtemConnectionAdaptor::upstreamKeyDVEBorderInsideSoften(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyDVEBorderInsideSoften
    uchar out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyDVEBorderInsideSoften", Q_RETURN_ARG(uchar, out0), Q_ARG(uchar, keyer));
    return out0;
}

uchar QAtemConnectionAdaptor::upstreamKeyDVEBorderOpacity(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyDVEBorderOpacity
    uchar out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyDVEBorderOpacity", Q_RETURN_ARG(uchar, out0), Q_ARG(uchar, keyer));
    return out0;
}

uchar QAtemConnectionAdaptor::upstreamKeyDVEBorderOutsideSoften(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyDVEBorderOutsideSoften
    uchar out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyDVEBorderOutsideSoften", Q_RETURN_ARG(uchar, out0), Q_ARG(uchar, keyer));
    return out0;
}

uchar QAtemConnectionAdaptor::upstreamKeyDVEBorderStyle(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyDVEBorderStyle
    uchar out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyDVEBorderStyle", Q_RETURN_ARG(uchar, out0), Q_ARG(uchar, keyer));
    return out0;
}

bool QAtemConnectionAdaptor::upstreamKeyDVEDropShadowEnabled(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyDVEDropShadowEnabled
    bool out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyDVEDropShadowEnabled", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, keyer));
    return out0;
}

bool QAtemConnectionAdaptor::upstreamKeyDVEKeyFrameASet(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyDVEKeyFrameASet
    bool out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyDVEKeyFrameASet", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, keyer));
    return out0;
}

bool QAtemConnectionAdaptor::upstreamKeyDVEKeyFrameBSet(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyDVEKeyFrameBSet
    bool out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyDVEKeyFrameBSet", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, keyer));
    return out0;
}

uchar QAtemConnectionAdaptor::upstreamKeyDVELightSourceAltitude(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyDVELightSourceAltitude
    uchar out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyDVELightSourceAltitude", Q_RETURN_ARG(uchar, out0), Q_ARG(uchar, keyer));
    return out0;
}

uchar QAtemConnectionAdaptor::upstreamKeyDVERate(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyDVERate
    uchar out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyDVERate", Q_RETURN_ARG(uchar, out0), Q_ARG(uchar, keyer));
    return out0;
}

bool QAtemConnectionAdaptor::upstreamKeyEnableFly(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyEnableFly
    bool out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyEnableFly", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, keyer));
    return out0;
}

bool QAtemConnectionAdaptor::upstreamKeyEnableMask(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyEnableMask
    bool out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyEnableMask", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, keyer));
    return out0;
}

ushort QAtemConnectionAdaptor::upstreamKeyFillSource(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyFillSource
    ushort out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyFillSource", Q_RETURN_ARG(ushort, out0), Q_ARG(uchar, keyer));
    return out0;
}

ushort QAtemConnectionAdaptor::upstreamKeyKeySource(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyKeySource
    ushort out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyKeySource", Q_RETURN_ARG(ushort, out0), Q_ARG(uchar, keyer));
    return out0;
}

bool QAtemConnectionAdaptor::upstreamKeyLumaInvertKey(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyLumaInvertKey
    bool out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyLumaInvertKey", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, keyer));
    return out0;
}

bool QAtemConnectionAdaptor::upstreamKeyLumaPreMultipliedKey(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyLumaPreMultipliedKey
    bool out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyLumaPreMultipliedKey", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, keyer));
    return out0;
}

bool QAtemConnectionAdaptor::upstreamKeyOn(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyOn
    bool out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyOn", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, keyer));
    return out0;
}

bool QAtemConnectionAdaptor::upstreamKeyPatternInvertPattern(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyPatternInvertPattern
    bool out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyPatternInvertPattern", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, keyer));
    return out0;
}

uchar QAtemConnectionAdaptor::upstreamKeyPatternPattern(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyPatternPattern
    uchar out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyPatternPattern", Q_RETURN_ARG(uchar, out0), Q_ARG(uchar, keyer));
    return out0;
}

uchar QAtemConnectionAdaptor::upstreamKeyType(uchar keyer)
{
    // handle method call com.blackmagicdesign.QAtemConnection.upstreamKeyType
    uchar out0;
    QMetaObject::invokeMethod(parent(), "upstreamKeyType", Q_RETURN_ARG(uchar, out0), Q_ARG(uchar, keyer));
    return out0;
}

uchar QAtemConnectionAdaptor::videoDownConvertType()
{
    // handle method call com.blackmagicdesign.QAtemConnection.videoDownConvertType
    uchar out0;
    QMetaObject::invokeMethod(parent(), "videoDownConvertType", Q_RETURN_ARG(uchar, out0));
    return out0;
}

uchar QAtemConnectionAdaptor::videoFormat()
{
    // handle method call com.blackmagicdesign.QAtemConnection.videoFormat
    uchar out0;
    QMetaObject::invokeMethod(parent(), "videoFormat", Q_RETURN_ARG(uchar, out0));
    return out0;
}

ushort QAtemConnectionAdaptor::wipeBorderSoftness()
{
    // handle method call com.blackmagicdesign.QAtemConnection.wipeBorderSoftness
    ushort out0;
    QMetaObject::invokeMethod(parent(), "wipeBorderSoftness", Q_RETURN_ARG(ushort, out0));
    return out0;
}

ushort QAtemConnectionAdaptor::wipeBorderSource()
{
    // handle method call com.blackmagicdesign.QAtemConnection.wipeBorderSource
    ushort out0;
    QMetaObject::invokeMethod(parent(), "wipeBorderSource", Q_RETURN_ARG(ushort, out0));
    return out0;
}

ushort QAtemConnectionAdaptor::wipeBorderWidth()
{
    // handle method call com.blackmagicdesign.QAtemConnection.wipeBorderWidth
    ushort out0;
    QMetaObject::invokeMethod(parent(), "wipeBorderWidth", Q_RETURN_ARG(ushort, out0));
    return out0;
}

bool QAtemConnectionAdaptor::wipeFlipFlop()
{
    // handle method call com.blackmagicdesign.QAtemConnection.wipeFlipFlop
    bool out0;
    QMetaObject::invokeMethod(parent(), "wipeFlipFlop", Q_RETURN_ARG(bool, out0));
    return out0;
}

uchar QAtemConnectionAdaptor::wipeFrames()
{
    // handle method call com.blackmagicdesign.QAtemConnection.wipeFrames
    uchar out0;
    QMetaObject::invokeMethod(parent(), "wipeFrames", Q_RETURN_ARG(uchar, out0));
    return out0;
}

bool QAtemConnectionAdaptor::wipeReverseDirection()
{
    // handle method call com.blackmagicdesign.QAtemConnection.wipeReverseDirection
    bool out0;
    QMetaObject::invokeMethod(parent(), "wipeReverseDirection", Q_RETURN_ARG(bool, out0));
    return out0;
}

ushort QAtemConnectionAdaptor::wipeSymmetry()
{
    // handle method call com.blackmagicdesign.QAtemConnection.wipeSymmetry
    ushort out0;
    QMetaObject::invokeMethod(parent(), "wipeSymmetry", Q_RETURN_ARG(ushort, out0));
    return out0;
}

uchar QAtemConnectionAdaptor::wipeType()
{
    // handle method call com.blackmagicdesign.QAtemConnection.wipeType
    uchar out0;
    QMetaObject::invokeMethod(parent(), "wipeType", Q_RETURN_ARG(uchar, out0));
    return out0;
}

ushort QAtemConnectionAdaptor::wipeXPosition()
{
    // handle method call com.blackmagicdesign.QAtemConnection.wipeXPosition
    ushort out0;
    QMetaObject::invokeMethod(parent(), "wipeXPosition", Q_RETURN_ARG(ushort, out0));
    return out0;
}

ushort QAtemConnectionAdaptor::wipeYPosition()
{
    // handle method call com.blackmagicdesign.QAtemConnection.wipeYPosition
    ushort out0;
    QMetaObject::invokeMethod(parent(), "wipeYPosition", Q_RETURN_ARG(ushort, out0));
    return out0;
}

